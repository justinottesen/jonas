#pragma once

#define UNUSED(x) (void)(x)

#define CTOR(CLASSNAME, MODIFIER) CLASSNAME() noexcept = MODIFIER
#define COPY_CTOR_ASSIGN(CLASSNAME, MODIFIER)                           \
    CLASSNAME(const CLASSNAME&) noexcept                    = MODIFIER; \
    auto operator=(const CLASSNAME&) noexcept -> CLASSNAME& = MODIFIER
#define MOVE_CTOR_ASSIGN(CLASSNAME, MODIFIER)                      \
    CLASSNAME(CLASSNAME&&) noexcept                    = MODIFIER; \
    auto operator=(CLASSNAME&&) noexcept -> CLASSNAME& = MODIFIER

#define DEFAULT_DTOR(CLASSNAME)         ~CLASSNAME() noexcept = default
#define VIRTUAL_DEFAULT_DTOR(CLASSNAME) virtual DEFAULT_DTOR(CLASSNAME)

#define DEFAULT_CTOR(CLASSNAME) CTOR(CLASSNAME, default)
#define DEFAULT_COPY(CLASSNAME) COPY_CTOR_ASSIGN(CLASSNAME, default)
#define DEFAULT_MOVE(CLASSNAME) MOVE_CTOR_ASSIGN(CLASSNAME, default)

#define DELETE_CTOR(CLASSNAME) CTOR(CLASSNAME, delete)
#define DELETE_COPY(CLASSNAME) COPY_CTOR_ASSIGN(CLASSNAME, delete)
#define DELETE_MOVE(CLASSNAME) MOVE_CTOR_ASSIGN(CLASSNAME, delete)

#define DEFAULT_CTOR_DTOR(CLASSNAME) \
    DEFAULT_CTOR(CLASSNAME);         \
    DEFAULT_DTOR(CLASSNAME)

#define DEFAULT_COPY_MOVE(CLASSNAME) \
    DEFAULT_COPY(CLASSNAME);         \
    DEFAULT_MOVE(CLASSNAME);

#define DELETE_COPY_MOVE(CLASSNAME) \
    DELETE_COPY(CLASSNAME);         \
    DELETE_MOVE(CLASSNAME)

#define DELETE_CTOR_COPY_MOVE(CLASSNAME) \
    DELETE_CTOR(CLASSNAME);              \
    DELETE_COPY_MOVE(CLASSNAME)

#define ABSTRACT_CTORS_DTOR(CLASSNAME) \
    VIRTUAL_DEFAULT_DTOR(CLASSNAME);   \
    DELETE_COPY_MOVE(CLASSNAME)

#define INTERFACE_CTORS_DTOR(CLASSNAME) \
    DEFAULT_CTOR(CLASSNAME);            \
    ABSTRACT_CTORS_DTOR(CLASSNAME)
